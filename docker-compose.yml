version: "3.4"

services:

  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    networks:
      - integration-test
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: username
      POSTGRES_DB: bank
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    volumes:
      - "pgadmin4_data:/var/lib/pgadmin"
    networks:
      - integration-test
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - integration-test
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.3
    networks:
      - integration-test
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5601/" ]
      retries: 6

  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    networks:
      - integration-test
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - integration-test
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local
  pgadmin4_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  integration-test:
    driver: bridge
